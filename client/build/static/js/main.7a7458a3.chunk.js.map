{"version":3,"sources":["components/AllPets.js","components/PetFormNew.js","components/PetFromEdit.js","components/PetInfo.js","App.js","reportWebVitals.js","index.js"],"names":["AllPets","props","useState","allPets","setAllPets","deletePets","useEffect","axios","get","then","res","console","log","data","catch","err","formSubmit","to","map","element","_id","name","type","PetFormNew","history","useHistory","description","skill1","skill2","skill3","formInfo","setFormInfo","formErrors","setFormErrors","changeHandler","e","target","value","onSubmit","preventDefault","post","errors","push","onChange","message","id","useParams","put","PetInfo","petInfo","setPetInfo","onClick","delete","error","deletePet","App","setFormSubmit","className","exact","path","setFromSubmit","PetFromEdit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a7458a3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst AllPets = (props) => {\n    \n    //keep track of what is being typed via useState hook\n    const [ allPets, setAllPets ] = useState([]); \n    const [ deletePets, setdeletePets ] = useState(false)\n\n    //handler when the form is submitted\n    useEffect(() => { \n        axios.get('http://localhost:8000/api/pets')\n        .then(res=>{\n            console.log(\"Response getting all pets --> \", res.data)\n            setAllPets(res.data)\n        })\n        .catch(err=>console.log(err))\n\n    },[props.formSubmit, deletePets]);\n\n    // Delete Pets\n    const deletePet = (id) => {\n        axios.delete(`http://localhost:8000/api/pets/${id}`)\n            .then(res => {\n                console.log(res) \n                setdeletePets(!deletePets)\n            })\n            .catch(err => console.error(err));\n    }\n\n    //onChange to update firstName and lastName\n    return (\n        <div>\n            <Link to={`/pets/new`}>Add New</Link>\n\n            <h1> Pet Shelter </h1>\n            <h3> These pets are looking for a good home </h3>\n\n            <table>\n                <thead>\n                    <tr>\n                        <th> Name </th>\n                        <th> Types </th>\n                        <th> Actions </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { allPets.map(element => {\n                        return(\n    \n                            <tr key={`${element._id}`}>\n                                <td>\n                                    <p to={`/api/pets/${element._id}`}>{element.name}</p>\n                                </td>\n                                <td>\n                                    <p to={`/api/pets/${element._id}`}>{element.type}</p>\n                                </td>\n                                <td>\n                                <Link to={`/api/pets/${element._id}`}>Details</Link> | <Link to={`/pets/edit/${element._id}`}>Edit</Link>\n                                </td>\n                        \n                            </tr>  )\n                            \n                    }\n\n                )}\n                    </tbody>\n                    </table>\n        </div>\n    )\n}\n\nexport default AllPets","import React, {useState} from 'react';\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\n\nconst PetFormNew = (props) => {\n\n    const history = useHistory() \n    \n    //keep track of what is being typed via useState hook\n    const [formInfo, setFormInfo] = useState({\n        name: \"\",\n        type: \"\",\n        description: \"\",\n        skill1: \"\",\n        skill2: \"\",\n        skill3: \"\"\n\n    })\n\n    // Validation \n    const [formErrors, setFormErrors] = useState({\n        name: \"\",\n        type: \"\",\n        description: \"\",\n        skill1: \"\",\n        skill2: \"\",\n        skill3: \"\"\n    })\n\n    // Change Handler\n    const changeHandler = (e) =>{\n        console.log(\"changing the form\")\n        setFormInfo({\n            ...formInfo,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const submitHandler = (e)=>{\n        e.preventDefault()\n        \n        axios.post(\"http://localhost:8000/api/pets/make\", formInfo)\n            .then(res=>{\n                console.log(res)\n                \n                if(res.data.errors){ //if the form is not filled out properly\n                    setFormErrors(res.data.errors)\n                }else{\n\n                history.push(\"/\")\n            }\n            })\n            .catch(err=>console.log(err))\n\n    }\n\n    return (\n        <div>\n            <h1> Pet Shelter </h1>\n            <h3> Know a pet needing a home? </h3>\n            \n            <form onSubmit= {submitHandler}>\n                    <p>\n                        <label>Pet Name:</label>\n                        <input onChange={changeHandler} type=\"text\" name=\"name\" value={formInfo.name}/>\n                        <p>{formErrors.name?.message}</p>\n                    </p>\n                    <p>\n                        <label>Pet Type:</label>\n                        <input onChange={changeHandler} type=\"text\" name=\"type\" value={formInfo.type}/>\n                        <p>{formErrors.type?.message}</p>\n                    </p>\n                    <p>\n                        <label>Pet Description:</label>\n                        <input onChange={changeHandler} type=\"text\" name=\"description\" value={formInfo.description}/>\n                        <p>{formErrors.description?.message}</p>\n                    </p>\n                    <h3> Skills (optional): </h3>\n                    <p>\n                        <label>Skill1:</label>\n                        <input onChange={changeHandler} type=\"text\" name=\"skill1\" value={formInfo.skill1}/>\n                        <p>{formErrors.skill1?.message}</p>\n                    </p>\n                    <p>\n                        <label>Skill2:</label>\n                        <input onChange={changeHandler} type=\"text\" name=\"skill2\" value={formInfo.skill2}/>\n                        <p>{formErrors.skill2?.message}</p>\n                    </p>\n                    <p>\n                        <label>Skill3:</label>\n                        <input onChange={changeHandler} type=\"text\" name=\"skill3\" value={formInfo.skill3}/>\n                        <p>{formErrors.skill3?.message}</p>\n                    </p>\n\n                <input onChange={changeHandler} type=\"submit\" value=\"Add Pet\" />\n\n            </form>\n        </div>\n    );\n};\n\nexport default PetFormNew;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport { useParams, useHistory } from \"react-router-dom\";\n\nconst PetFormNew = (props) => {\n\n    const { id } = useParams();\n    const history = useHistory() \n    \n    //keep track of what is being typed via useState hook\n    const [formInfo, setFormInfo] = useState({\n        name: \"\",\n        type: \"\",\n        description: \"\",\n        skill1: \"\",\n        skill2: \"\",\n        skill3: \"\"\n\n    })\n\n    // Validation \n    const [formErrors, setFormErrors] = useState({\n        name: \"\",\n        type: \"\",\n        description: \"\"\n    })\n\n    // Change Handler\n    const changeHandler = (e) =>{\n        console.log(\"changing the form\")\n        setFormInfo({\n            ...formInfo,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    // Get the information \n   useEffect (() => {\n    axios.get(`http://localhost:8000/api/pets/${id}`)\n        .then(res => { \n            console.log(\"response from get one: \", res);\n            setFormInfo(res.data)\n            })\n            .catch(err => console.log(err))\n        },[]);\n\n    const submitHandler = (e)=>{\n        e.preventDefault()\n        \n        axios.put(`http://localhost:8000/api/pets/${id}`, formInfo)\n            .then(res=>{\n                \n                console.log(res)\n                \n                if(res.data.errors){ //if the form is not filled out properly\n                    setFormErrors(res.data.errors)\n                }else{\n\n                    history.push(\"/\")\n            }\n            })\n            .catch(err=>console.log(err))\n\n    }\n\n    return (\n        \n        <div>\n            <h1> Pet Shelter </h1>\n            <h3> Edit {formInfo.name} </h3>\n            {\n                formInfo != null ? \n                        <form onSubmit= {submitHandler}>\n                                <p>\n                                    <label>Name:</label>\n                                    <input onChange={changeHandler} type=\"text\" name=\"name\" value={formInfo.name}/>\n                                    <p>{formErrors.name?.message}</p>\n                                </p>\n                                <p>\n                                    <label>Type:</label>\n                                    <input onChange={changeHandler} type=\"text\" name=\"type\" value={formInfo.type}/>\n                                    <p>{formErrors.type?.message}</p>\n                                </p>\n                                <p>\n                                    <label>Description:</label>\n                                    <input onChange={changeHandler} type=\"text\" name=\"description\" value={formInfo.description}/>\n                                    <p>{formErrors.description?.message}</p>\n                                </p>\n                                <p>\n                                    <label>Skill1:</label>\n                                    <input onChange={changeHandler} type=\"text\" name=\"skill1\" value={formInfo.skill1}/>\n                                    <p>{formErrors.skill1?.message}</p>\n                                </p>\n                                <p>\n                                    <label>Skill2:</label>\n                                    <input onChange={changeHandler} type=\"text\" name=\"skill2\" value={formInfo.skill2}/>\n                                    <p>{formErrors.skill2?.message}</p>\n                                </p>\n                                <p>\n                                    <label>Skill3:</label>\n                                    <input onChange={changeHandler} type=\"text\" name=\"skill3\" value={formInfo.skill3}/>\n                                    <p>{formErrors.skill3?.message}</p>\n                                </p>\n\n                            <input onChange={changeHandler} type=\"submit\" value=\"Edit\" />\n\n                        </form>\n            :\n                    <div>\n                        <h1>There is no pets</h1>\n                    </div>\n            }\n\n        </div>\n    );\n};\n\nexport default PetFormNew;","import React, { useState, useEffect } from 'react'\nimport { useParams, useHistory } from 'react-router';\nimport axios from 'axios';\n\nconst PetInfo = (props) => {\n\n    const [petInfo, setPetInfo] = useState({});\n    const { id } = useParams();\n    const history = useHistory();\n\n    useEffect (() => {\n    axios.get(`http://localhost:8000/api/pets/${id}`)\n        .then(res => { \n            console.log(\"response from get one: \", res);\n            setPetInfo(res.data)\n            })\n            .catch(err => console.log(err))\n        },[id]);\n\n        const deletePet = (id) => {\n            axios.delete(`http://localhost:8000/api/pets/${id}`)\n                .then(res => {\n                    console.log(res) \n                    history.push('/');\n                })\n                .catch(err => console.error(err));\n        }\n\n    return (\n        <>\n        <h1> Pet Shelter </h1>\n        <h2> Details about: {petInfo.name} </h2>\n        \n        <div> \n            <p> Pet type: {petInfo.type} </p>\n            <p>Description: {petInfo.description}</p>\n            <p>skills: {petInfo.skill1}<br/>\n                        {petInfo.skill2}<br/>\n                        {petInfo.skill3}\n            </p>\n            <button onClick={(e)=>{deletePet(petInfo._id)}}>Adopt {petInfo.name} </button>\n        </div>\n        </>\n    );\n};\n\nexport default PetInfo;","import './App.css';\nimport React, { useState } from 'react';\nimport AllPets from './components/AllPets';\nimport PetFormNew from './components/PetFormNew';\nimport PetFromEdit from './components/PetFromEdit'; \nimport PetInfo from './components/PetInfo';\n\nimport {\n  BrowserRouter,\n  Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nfunction App() {\n\n  const [formSubmit, setFormSubmit] = useState(false)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <BrowserRouter>\n\n      <Link to=\"/\" >Home</Link>  \n      <br/>\n\n      <Switch> \n          <Route exact path = \"/\">\n            <AllPets formSubmit = {formSubmit} setFromSubmit = {setFormSubmit}> </AllPets>\n          </Route>\n\n        <Route exact path = \"/pets/new\">\n          <PetFormNew formSubmit = {formSubmit} setFormSubmit= {setFormSubmit}/>\n        </Route>\n\n        <Route exact path = \"/pets/edit/:id\">\n            <PetFromEdit formSubmit = {formSubmit} setFormSubmit= {setFormSubmit}/>\n        </Route>\n\n        <Route exact path = \"/api/pets/:id\">\n            <PetInfo/>\n        </Route>\n\n    </Switch>\n\n    </BrowserRouter>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}